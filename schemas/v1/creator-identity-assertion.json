{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://creator-assertions.github.io/schemas/v1/creator-identity-assertion.json",
    "title": "CreatorIdentityAssertionCredentialCredential",
    "description": "Creator Identity Assertion Credential Schema for usage in JsonSchema",
    "type": "object",
    "properties": {
      "type" : {
        "type": "array",
        "minItems": 2,
        "items": {
          "type": "string"
        },
        "allOf": [
          {
            "contains": { "const": "VerifiableCredential" }
          },
          {
            "contains": { "const": "CreatorIdentityAssertionCredential" }
          }
        ]
      },
      "issuer": {
        "oneOf": [
          {
            "$ref": "#/$defs/nonEmptyUri"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/$defs/nonEmptyUri"
              },
              "name": {
                "$ref": "#/$defs/nonEmptyString"
              }
            },
            "required": ["id"]
          }
        ]
      },
      "validFrom": {
        "type": "string",
        "format": "date-time"
      },
      "credentialSubject": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/$defs/nonEmptyUri"
          },
          "namedActor": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "$ref": "#/$defs/nonEmptyString"
                },
                "verifiedBy": {
                  "type": "object",
                  "minProperties": 2,
                  "properties": {
                    "id": {
                      "$ref": "#/$defs/nonEmptyUri"
                    },
                    "name": {
                      "$ref": "#/$defs/nonEmptyString"
                    },
                    "proof": {
                      "$ref": "#/$defs/nonEmptyString"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              },
              "required": [
                "name",
                "verifiedBy"
              ]
            }
          },
          "identities": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/$defs/nonEmptyString"
                }
              },
              "required": ["type"],
              "if": {
                "properties": {
                  "type": {
                    "const": "socialProvider"
                  }
                }
              },
              "then": {
                "properties": {
                  "provider": {
                    "$ref": "#/$defs/identifiableObject"
                  },
                  "username": {
                    "$ref": "#/$defs/nonEmptyString"
                  },
                  "uri": {
                    "$ref": "#/$defs/nonEmptyUri"
                  },
                  "createdAt": {
                    "$ref": "#/$defs/nonEmptyString",
                    "format": "date-time"
                  }
                },
                "required": ["provider", "uri", "createdAt"]
              },
              "else": {
                "if": {
                  "properties": {
                    "type": {
                      "const": "cryptoWallet"
                    }
                  }
                },
                "then": {
                  "properties": {
                    "provider": {
                      "$ref": "#/$defs/identifiableObject"
                    },
                    "address": {
                      "$ref": "#/$defs/nonEmptyString"
                    },
                    "createdAt": {
                      "$ref": "#/$defs/nonEmptyString",
                      "format": "date-time"
                    }
                  },
                  "required": ["provider", "address", "createdAt"]
                }
              }
            }
          },
          "boundTo": {
            "type": "object",
            "minProperties": 1,
            "properties": {
              "referencedAssertions": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "$ref": "#/$defs/nonEmptyString"
                    },
                    "hash": {
                      "$ref": "#/$defs/nonEmptyString"
                    }
                  },
                  "required": ["hash"]
                }
              }
            },
            "required": ["referencedAssertions"]
          }
        },
        "required": ["id", "boundTo"],
        "anyOf": [
          {
            "required": ["identities"]
          },
          {
            "required": ["namedActor"]
          }
        ]
      }
    },
    "required": ["type", "issuer", "validFrom", "credentialSubject"],
    "$defs": {
      "nonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "nonEmptyUri": {
        "type": "string",
        "minLength": 1,
        "format": "uri"
      },
      "identifiableObject": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/$defs/nonEmptyUri"
          },
          "name": {
            "$ref": "#/$defs/nonEmptyString"
          }
        },
        "required": ["id", "name"]
      }
    }
  }